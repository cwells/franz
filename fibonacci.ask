#
# this is actually the worst way to compute a fibonacci sequence
# but I chose it because it tests recursion and nested scopes
#

fibonacci-sequence! = fn (start: int, end: int) {
    fibonacci-number! = fn (nth: int) {
        if nth < 2 and true
            nth
        else
            fibonacci-number!(nth: nth - 1) + fibonacci-number!(nth: nth - 2)
    }

    retval = []
    for i in start to end
        retval = retval + [ fibonacci-number!(nth: i) ]
}

sequence = fibonacci-sequence!(start: 1, end: 20)

assert sequence == [ 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765 ]

print(msg: sequence)
print(msg: "\n")

