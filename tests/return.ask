#
# test return <value>
#

print("Testing return [value]...")
errors = 0

f = fn () # return <value>
    for i in 1 to 5
        if i == 5 return "string"

g = fn () # naked return
    for i in 1 to 10
        if i == 5 return nil

h = fn (n: int) # return <complex expression>, nested return
    return for i in 1 to n {
        f = fn () return n * i
        f()
    }

try assert f() == "string" rescue errors++
try assert g() == nil rescue errors++
try assert h(20) == 400 rescue errors++

print(if errors "Some tests failed ({errors}) errors\n" else "passed!\n")
