#
# this is actually the worst way to compute a fibonacci sequence
# but I chose it because it tests recursion and nested scopes
#

errors = 0
print("Testing fibonacci sequence (recursion, scope)...")

fibonacci_sequence! = fn (start: int, end: int) {
    fibonacci_number! = fn (nth: int) {
        if nth < 2
            nth
        else
            fibonacci_number!(nth - 1) + fibonacci_number!(nth - 2)
    }

    retval = []
    for i in start to end
        retval += [ fibonacci_number!(i) ]
}

sequence = fibonacci_sequence!(start: 1, end: 20)

try assert sequence == [ 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765 ]
rescue errors++

print(if errors "Some tests failed ({errors}) errors\n" else "passed!\n")

